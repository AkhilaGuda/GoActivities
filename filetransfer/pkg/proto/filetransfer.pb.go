// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: pkg/proto/filetransfer.proto

package filetransfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *FileUploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileUploadRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type FileUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *FileUploadResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileUploadResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_filetransfer_proto_rawDescGZIP(), []int{2}
}

func (x *FileDownloadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type FileDownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_filetransfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_filetransfer_proto_rawDescGZIP(), []int{3}
}

func (x *FileDownloadResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileDownloadResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_pkg_proto_filetransfer_proto protoreflect.FileDescriptor

const file_pkg_proto_filetransfer_proto_rawDesc = "" +
	"\n" +
	"\x1cpkg/proto/filetransfer.proto\x12\ffiletransfer\"E\n" +
	"\x11FileUploadRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\"D\n" +
	"\x12FileUploadResponse\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\"1\n" +
	"\x13FileDownloadRequest\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\"H\n" +
	"\x14FileDownloadResponse\x12\x1a\n" +
	"\bfileName\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk2\xb1\x01\n" +
	"\vFileService\x12M\n" +
	"\x06Upload\x12\x1f.filetransfer.FileUploadRequest\x1a .filetransfer.FileUploadResponse(\x01\x12S\n" +
	"\bDownload\x12!.filetransfer.FileDownloadRequest\x1a\".filetransfer.FileDownloadResponse0\x01B!Z\x1ffiletransfer/proto/filetransferb\x06proto3"

var (
	file_pkg_proto_filetransfer_proto_rawDescOnce sync.Once
	file_pkg_proto_filetransfer_proto_rawDescData []byte
)

func file_pkg_proto_filetransfer_proto_rawDescGZIP() []byte {
	file_pkg_proto_filetransfer_proto_rawDescOnce.Do(func() {
		file_pkg_proto_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_filetransfer_proto_rawDesc), len(file_pkg_proto_filetransfer_proto_rawDesc)))
	})
	return file_pkg_proto_filetransfer_proto_rawDescData
}

var file_pkg_proto_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_proto_filetransfer_proto_goTypes = []any{
	(*FileUploadRequest)(nil),    // 0: filetransfer.FileUploadRequest
	(*FileUploadResponse)(nil),   // 1: filetransfer.FileUploadResponse
	(*FileDownloadRequest)(nil),  // 2: filetransfer.FileDownloadRequest
	(*FileDownloadResponse)(nil), // 3: filetransfer.FileDownloadResponse
}
var file_pkg_proto_filetransfer_proto_depIdxs = []int32{
	0, // 0: filetransfer.FileService.Upload:input_type -> filetransfer.FileUploadRequest
	2, // 1: filetransfer.FileService.Download:input_type -> filetransfer.FileDownloadRequest
	1, // 2: filetransfer.FileService.Upload:output_type -> filetransfer.FileUploadResponse
	3, // 3: filetransfer.FileService.Download:output_type -> filetransfer.FileDownloadResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_proto_filetransfer_proto_init() }
func file_pkg_proto_filetransfer_proto_init() {
	if File_pkg_proto_filetransfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_filetransfer_proto_rawDesc), len(file_pkg_proto_filetransfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_filetransfer_proto_goTypes,
		DependencyIndexes: file_pkg_proto_filetransfer_proto_depIdxs,
		MessageInfos:      file_pkg_proto_filetransfer_proto_msgTypes,
	}.Build()
	File_pkg_proto_filetransfer_proto = out.File
	file_pkg_proto_filetransfer_proto_goTypes = nil
	file_pkg_proto_filetransfer_proto_depIdxs = nil
}
